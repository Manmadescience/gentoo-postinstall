#!/bin/bash

source /lib/gentoo/functions.sh

ebegin "Sourcing custom scripts in .bashrc"
GIT_DIR=$(git rev-parse --show-toplevel)
SOURCE_LINE="source \"$GIT_DIR/env-init\""
grep -q -F "$SOURCE_LINE" $HOME/.bashrc || printf "\n# execute custom init script\n$SOURCE_LINE" >> $HOME/.bashrc
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Sourcing aliases"
# source aliases
for f in "$GIT_DIR"/aliases/*; do
	SOURCE_LINE="source \"$f\""
	grep -q -F "$SOURCE_LINE" $HOME/.bashrc || printf "\n$SOURCE_LINE" >> $HOME/.bashrc
done
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

LOCAL_BIN=$(systemd-path user-binaries)
ebegin "Copying custom scripts to $LOCAL_BIN"
# copy custom executables
if [ -d "$LOCAL_BIN" ] ; then
    cp -ax "$GIT_DIR"/bin/* "$LOCAL_BIN" 2>/dev/null
    cp -ax "$GIT_DIR"/qemu/* "$LOCAL_BIN" 2>/dev/null
fi
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

# install /etc/portage/bashrc
ebegin "Installing /etc/portage/bashrc"
sudo cp -ax "$GIT_DIR"/portage-bashrc /etc/portage/bashrc
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

# copy mounter
#ebegin "Installing shared dir mounter"
#NM_CONF_DIR="/etc/NetworkManager/dispatcher.d/"
#POST_CONN_HOOK="$NM_CONF_DIR/99-mounter"
#sudo cp -ax $GIT_DIR/network/mounter $POST_CONN_HOOK
# change owner to root
#sudo chown root:root $POST_CONN_HOOK
#eend $?
#rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi
