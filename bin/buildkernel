#!/bin/bash

_rc_fns="/etc/init.d/functions.sh"
_rc_fns_fallback="/etc/init.d/functions"
if [ -f "$_rc_fns" ]; then
	source $_rc_fns
elif [ -f "$_rc_fns_fallback" ]; then
	source $_rc_fns_fallback
else
	einfo () {
		printf "%s\n" "$*"
	}
	ebegin () {
		printf "%s ...\n" "$*"
	}
	eend () {
		_ret=$?
		printf "\n"; return $_ret
	}
	export -f einfo ebegin eend
	einfo "init.d functions not found, using custom fallback."
fi

_kernel_conf_dir=""
_kernel_conf="$_kernel_conf_dir"/config.$(hostname)

ebegin "Checking if any kernel sources available"
_kernels=$(eselect kernel list | tail -n +2 | wc -l)
rc=0
[ "$_kernels" -lt 0 ] && rc=1
eend $rc
if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Selecting latest kernel sources available"
eselect kernel list | tail -1 | awk -F ' ' '{print $2}' | xargs sudo eselect kernel set
#_kernel_targets=$(eselect kernel list | tail -1 | awk -F ' ' '{print $2}')
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi
einfo "Selected kernel:" $(eselect kernel show | tail -1 | awk -F '/' '{print $4}')

ebegin "Checking if kernel conf dir present"
rc=0
[ -d "$_kernel_conf_dir" ] || rc=1
eend $rc
if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Checking if kernel conf present"
rc=0
[ -f "$_kernel_conf" ] || rc=1
eend $rc
if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Entering linux source dir"
_sourcedir="/usr/src/linux"
cd $_sourcedir
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Determining kernel source version"
_version=$(make kernelversion)
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi
einfo "Kernel source version:" $_version

ebegin "Copying kernel conf"
_conf_target="$_sourcedir/.config"
cp --force --preserve=all $_kernel_conf $_conf_target
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Applying kernel conf"
make silentoldconfig
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

if [ "$(hostname)" == "msi_gx70" ]; then
	ebegin "Copying DSDT table patch"
	_dsdt_patch="/home/hoefling/programming/misc/acpi-fixes/msi-gx70-3cc/dsl/dsdt.hex"
	_dsdt_target="$_sourcedir/dsdt_table.h"
	cp $_dsdt_patch $_dsdt_target
	eend $?
	rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi
fi

ebegin "Compiling kernel sources with existing config"
make -j5 > /dev/null
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Installing kernel modules"
make modules_install -j5 > /dev/null
make install > /dev/null
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Copying kernel to boot dir"
cp /boot/vmlinuz-$_version /boot/efi/boot/bootx64.efi
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

#ebegin "Signing kernel with custom secure boot keys"
#sbsign --key /etc/efikeys/db.key --cert /etc/efikeys/db.crt --output /boot/efi/boot/bootx64.efi.signed /boot/efi/boot/bootx64.efi
#eend $?
#rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

#ebegin "Backing up unsigned kernel"
#mv /boot/efi/boot/bootx64.efi /boot/efi/boot/bootx64.efi.unsigned
#cp /boot/efi/boot/bootx64.efi.signed /boot/efi/boot/bootx64.efi
#eend $?
#rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

ebegin "Rebuilding modules"
make modules_prepare 1> /dev/null && emerge @module-rebuild 1> /dev/null
eend $?
rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi

einfo "Kernel compiled."

ebegin "Checking kernel conf for differences"
diff $_kernel_conf $_conf_target > /dev/null
_changes=$?
eend $?
rc=$_changes; if [[ $rc == 2 ]]; then exit $rc; fi

if [ "$_changes" -gt 0 ]; then
	ebegin "Kernel conf changes detected; committing"
	_git="git -C $_kernel_conf_dir"
	_branch="buildkernel"
	$_git reset . &> /dev/null \
		&& cp --force --no-preserve=all $_conf_target $_kernel_conf \
		&& $_git checkout -b $_branch &> /dev/null \
		&& $_git add $_kernel_conf &> /dev/null \
		&& $_git commit -m "[$_branch] linux-$_version kernel conf changed" &> /dev/null \
		&& $_git checkout master &> /dev/null \
		&& $_git merge --no-ff --no-edit $_branch &> /dev/null \
		&& $_git branch -d $_branch &> /dev/null
	eend $?
	rc=$?; if [[ $rc != 0 ]]; then exit $rc; fi
	einfo "Don't forget to push the recent changes on master."
fi

einfo "All done. You may reboot now."
